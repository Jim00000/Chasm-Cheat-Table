<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="29">
  <CheatEntries>
    <CheatEntry>
      <ID>4</ID>
      <Description>"Chasm Build 1.074 Cheat Table v1.2.0 by Jim00000"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>/*
  Game   : Chasm.exe
  Version: Build 1.074
  Date   : 2020-01-19
  Author : Jim00000
*/

[ENABLE]

aobscan(INJECTION_PLAYER_HP,83 BB 5C 02 00 00 00 0F 8E 0F)          // should be unique
aobscan(INJECTION_PLAYER_MP,DB 83 F0 02 00 00)                      // should be unique
aobscan(INJECTION_PLAYER_GOLD,8B 40 18 89 85 90 FA FF FF)           // should be unique

alloc(PLAYER_HP_MEM,$1000)
alloc(PLAYER_MP_MEM,$1000)
alloc(PLAYER_GOLD_MEM,$1000)
alloc(VARIABLES_MEM,$1000)

label(PLAYER_HP_ORIGINAL_CODE)
label(PLAYER_MP_ORIGINAL_CODE)
label(PLAYER_GOLD_ORIGINAL_CODE)

label(PLAYER_HP_RETURN)
label(PLAYER_MP_RETURN)
label(PLAYER_GOLD_RETURN)

label(POINTER_PLAYER_HP)
label(POINTER_PLAYER_MP)
label(POINTER_PLAYER_GOLD)

registersymbol(INJECTION_PLAYER_HP)
registersymbol(INJECTION_PLAYER_MP)
registersymbol(INJECTION_PLAYER_GOLD)

registersymbol(POINTER_PLAYER_HP)
registersymbol(POINTER_PLAYER_MP)
registersymbol(POINTER_PLAYER_GOLD)

//------------------------------------------------------------------------------
// Hack HP of Player

PLAYER_HP_MEM:
 push rcx
 lea rcx, [ebx+0000025C]
 mov [POINTER_PLAYER_HP], rcx
 pop rcx

PLAYER_HP_ORIGINAL_CODE:
  cmp dword ptr [ebx+0000025C],00
  jmp PLAYER_HP_RETURN

INJECTION_PLAYER_HP:
  jmp PLAYER_HP_MEM
  nop 2
PLAYER_HP_RETURN:

{
// INJECTION_PLAYER_HP
// ORIGINAL CODE - INJECTION POINT: 079CAD0F

079CACDB: 66 0F D6 44 24 20     -  movq [esp+20],xmm0
079CACE1: F3 0F 7E 40 28        -  movq xmm0,[eax+28]
079CACE6: 66 0F D6 44 24 28     -  movq [esp+28],xmm0
079CACEC: F3 0F 7E 40 30        -  movq xmm0,[eax+30]
079CACF1: 66 0F D6 44 24 30     -  movq [esp+30],xmm0
079CACF7: F3 0F 7E 40 38        -  movq xmm0,[eax+38]
079CACFC: 66 0F D6 44 24 38     -  movq [esp+38],xmm0
079CAD02: 8B 8D 3C FD FF FF     -  mov ecx,[ebp-000002C4]
079CAD08: 33 D2                 -  xor edx,edx
079CAD0A: E8 B1 84 41 00        -  call 07DE31C0
// ---------- INJECTING HERE ----------
079CAD0F: 83 BB 5C 02 00 00 00  -  cmp dword ptr [ebx+0000025C],00
// ---------- DONE INJECTING  ----------
079CAD16: 0F 8E 0F 01 00 00     -  jng 079CAE2B
079CAD1C: 8B 8B 84 00 00 00     -  mov ecx,[ebx+00000084]
079CAD22: BA 28 00 00 00        -  mov edx,00000028
079CAD27: 39 09                 -  cmp [ecx],ecx
079CAD29: FF 15 C4 B5 7E 07     -  call dword ptr [077EB5C4]
079CAD2F: 85 C0                 -  test eax,eax
079CAD31: 0F 84 F4 00 00 00     -  je 079CAE2B
079CAD37: 8B 0D 9C 40 49 03     -  mov ecx,[0349409C]
079CAD3D: 8D 55 A0              -  lea edx,[ebp-60]
079CAD40: 39 09                 -  cmp [ecx],ecx
}

//------------------------------------------------------------------------------
// Hack MP of Player

PLAYER_MP_MEM:
  push rax
  lea rax, [ebx+000002F0]
  mov [POINTER_PLAYER_MP], rax
  pop rax

PLAYER_MP_ORIGINAL_CODE:
  fild dword ptr [ebx+000002F0]
  jmp PLAYER_MP_RETURN

INJECTION_PLAYER_MP:
  jmp PLAYER_MP_MEM
  nop
PLAYER_MP_RETURN:

{
// INJECTION_PLAYER_MP
// ORIGINAL CODE - INJECTION POINT: 08543DD3

08543DA8: D9 85 B4 FE FF FF        -  fld dword ptr [ebp-0000014C]
08543DAE: DC 7D 90                 -  fdivr qword ptr [ebp-70]
08543DB1: 83 EC 08                 -  sub esp,08
08543DB4: DD 1C 24                 -  fstp qword ptr [esp]
08543DB7: E8 C4 27 37 6F           -  call clr.dll+66580
08543DBC: DD 9D AC FE FF FF        -  fstp qword ptr [ebp-00000154]
08543DC2: F2 0F 10 85 AC FE FF FF  -  movsd xmm0,[ebp-00000154]
08543DCA: F2 0F 2C F8              -  cvttsd2si edi,xmm0
08543DCE: F7 DF                    -  neg edi
08543DD0: 83 C7 09                 -  add edi,09
// ---------- INJECTING HERE ----------
08543DD3: DB 83 F0 02 00 00        -  fild dword ptr [ebx+000002F0]
// ---------- DONE INJECTING  ----------
08543DD9: D9 9D B4 FE FF FF        -  fstp dword ptr [ebp-0000014C]
08543DDF: D9 85 B4 FE FF FF        -  fld dword ptr [ebp-0000014C]
08543DE5: D8 0D 40 47 54 08        -  fmul dword ptr [08544740]
08543DEB: DD 5D 88                 -  fstp qword ptr [ebp-78]
08543DEE: 8B 83 80 00 00 00        -  mov eax,[ebx+00000080]
08543DF4: 8B 50 0C                 -  mov edx,[eax+0C]
08543DF7: 8B CB                    -  mov ecx,ebx
08543DF9: E8 8A 87 9C FF           -  call 07F0C588
08543DFE: 89 85 B4 FE FF FF        -  mov [ebp-0000014C],eax
08543E04: DB 85 B4 FE FF FF        -  fild dword ptr [ebp-0000014C]
}

//------------------------------------------------------------------------------
// Hack Gold of Player

PLAYER_GOLD_MEM:
  push rbx
  lea rbx, [eax+18]
  mov [POINTER_PLAYER_GOLD], rbx
  pop rbx

PLAYER_GOLD_ORIGINAL_CODE:
  mov eax,[eax+18]
  mov [ebp-00000570],eax
  jmp PLAYER_GOLD_RETURN

INJECTION_PLAYER_GOLD:
  jmp PLAYER_GOLD_MEM
  nop 4
PLAYER_GOLD_RETURN:

{
// INJECTION_PLAYER_GOLD
// ORIGINAL CODE - INJECTION POINT: 0807263B

08072616: 39 09                 -  cmp [ecx],ecx
08072618: E8 F3 58 13 66        -  call mscorlib.ni.dll+B27F10
0807261D: 50                    -  push eax
0807261E: 8B CE                 -  mov ecx,esi
08072620: 33 D2                 -  xor edx,edx
08072622: 39 09                 -  cmp [ecx],ecx
08072624: E8 D7 D7 9A 65        -  call mscorlib.ni.dll+39FE00
08072629: 8B 83 38 02 00 00     -  mov eax,[ebx+00000238]
0807262F: 89 85 94 FA FF FF     -  mov [ebp-0000056C],eax
08072635: 8B 83 80 00 00 00     -  mov eax,[ebx+00000080]
// ---------- INJECTING HERE ----------
0807263B: 8B 40 18              -  mov eax,[eax+18]
0807263E: 89 85 90 FA FF FF     -  mov [ebp-00000570],eax
// ---------- DONE INJECTING  ----------
08072644: 6A 01                 -  push 01
08072646: 8B 8D 94 FA FF FF     -  mov ecx,[ebp-0000056C]
0807264C: 8B D0                 -  mov edx,eax
0807264E: E8 A5 C6 3B FF        -  call 0742ECF8
08072653: C6 83 0C 03 00 00 01  -  mov byte ptr [ebx+0000030C],01
0807265A: C6 83 0D 03 00 00 00  -  mov byte ptr [ebx+0000030D],00
08072661: 8B 83 74 02 00 00     -  mov eax,[ebx+00000274]
08072667: 89 85 48 FF FF FF     -  mov [ebp-000000B8],eax
0807266D: 83 F8 03              -  cmp eax,03
08072670: 0F 83 E1 02 00 00     -  jae 08072957
}

//------------------------------------------------------------------------------
// VARIABLES
VARIABLES_MEM:
POINTER_PLAYER_HP:
  dq 0
POINTER_PLAYER_MP:
  dq 0
POINTER_PLAYER_GOLD:
  dq 0
//------------------------------------------------------------------------------

[DISABLE]

INJECTION_PLAYER_HP:
  db 83 BB 5C 02 00 00 00
INJECTION_PLAYER_MP:
  db DB 83 F0 02 00 00
INJECTION_PLAYER_GOLD:
  db 8B 40 18 89 85 90 FA FF FF

dealloc(PLAYER_HP_MEM)
dealloc(PLAYER_MP_MEM)
dealloc(PLAYER_GOLD_MEM)
dealloc(VARIABLES_MEM)

unregistersymbol(INJECTION_PLAYER_HP)
unregistersymbol(INJECTION_PLAYER_MP)
unregistersymbol(INJECTION_PLAYER_GOLD)

unregistersymbol(POINTER_PLAYER_HP)
unregistersymbol(POINTER_PLAYER_MP)
unregistersymbol(POINTER_PLAYER_GOLD)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>5</ID>
          <Description>"HP"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>POINTER_PLAYER_HP</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"MP"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>POINTER_PLAYER_MP</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"Gold"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>POINTER_PLAYER_GOLD</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>16</ID>
          <Description>"Hack Concentration (card game) Timer "</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>/*
  Game   : Chasm.exe
  Version: Build 1.074
  Date   : 2020-01-19
  Author : Jim00000
*/

[ENABLE]

aobscan(INJECTION_CONCENTRATION_CARD_GAME_TIMER,D8 6E 54 D9 5E 54)  // should be unique

alloc(CONCENTRATION_CARD_GAME_TIMER_MEM,$1000)
alloc(VARIABLES_MEM,$1000)

label(CONCENTRATION_CARD_GAME_TIMER_ORIGINAL_CODE)
label(CONCENTRATION_CARD_GAME_TIMER_RETURN)
label(POINTER_CONCENTRATION_CARD_GAME_TIMER)

registersymbol(INJECTION_CONCENTRATION_CARD_GAME_TIMER)
registersymbol(POINTER_CONCENTRATION_CARD_GAME_TIMER)

//------------------------------------------------------------------------------
// Hack Timer of Concentration Card Game

CONCENTRATION_CARD_GAME_TIMER_MEM:
  push rax
  lea rax, [esi+54]
  mov [POINTER_CONCENTRATION_CARD_GAME_TIMER], rax
  pop rax

CONCENTRATION_CARD_GAME_TIMER_ORIGINAL_CODE:
  fsubr dword ptr [esi+54]
  fstp dword ptr [esi+54]
  jmp CONCENTRATION_CARD_GAME_TIMER_RETURN

INJECTION_CONCENTRATION_CARD_GAME_TIMER:
  jmp CONCENTRATION_CARD_GAME_TIMER_MEM
  nop
CONCENTRATION_CARD_GAME_TIMER_RETURN:

{
// INJECTION_CONCENTRATION_CARD_GAME_TIMER
// ORIGINAL CODE - INJECTION POINT: 07D1BAA8

07D1BA87: 0F 83 87 05 00 00  -  jae 07D1C014
07D1BA8D: 8B 4C 98 08        -  mov ecx,[eax+ebx*4+08]
07D1BA91: FF 75 08           -  push [ebp+08]
07D1BA94: 39 09              -  cmp [ecx],ecx
07D1BA96: FF 15 B8 3E C7 07  -  call dword ptr [07C73EB8]
07D1BA9C: 43                 -  inc ebx
07D1BA9D: 8B 46 4C           -  mov eax,[esi+4C]
07D1BAA0: 3B 58 0C           -  cmp ebx,[eax+0C]
07D1BAA3: 7C C7              -  jl 07D1BA6C
07D1BAA5: D9 45 08           -  fld dword ptr [ebp+08]
// ---------- INJECTING HERE ----------
07D1BAA8: D8 6E 54           -  fsubr dword ptr [esi+54]
07D1BAAB: D9 5E 54           -  fstp dword ptr [esi+54]
// ---------- DONE INJECTING  ----------
07D1BAAE: D9 46 54           -  fld dword ptr [esi+54]
07D1BAB1: D9 EE              -  fldz
07D1BAB3: DF F1              -  fcomip st(0),st(1)
07D1BAB5: DD D8              -  fstp st(0)
07D1BAB7: 7A 0A              -  jp 07D1BAC3
07D1BAB9: 72 08              -  jb 07D1BAC3
07D1BABB: 8B CE              -  mov ecx,esi
07D1BABD: FF 15 24 E3 F6 01  -  call dword ptr [01F6E324]
07D1BAC3: 80 7E 68 00        -  cmp byte ptr [esi+68],00
07D1BAC7: 0F 84 34 01 00 00  -  je 07D1BC01
}

//------------------------------------------------------------------------------
// VARIABLES
VARIABLES_MEM:
POINTER_CONCENTRATION_CARD_GAME_TIMER:
  dq 0
//------------------------------------------------------------------------------
[DISABLE]

INJECTION_CONCENTRATION_CARD_GAME_TIMER:
  db D8 6E 54 D9 5E 54

dealloc(CONCENTRATION_CARD_GAME_TIMER_MEM)
dealloc(VARIABLES_MEM)

unregistersymbol(INJECTION_CONCENTRATION_CARD_GAME_TIMER)
unregistersymbol(POINTER_CONCENTRATION_CARD_GAME_TIMER)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>15</ID>
              <Description>"Concentration (card game) Timer"</Description>
              <VariableType>Float</VariableType>
              <Address>POINTER_CONCENTRATION_CARD_GAME_TIMER</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>25</ID>
          <Description>"Infinity Magic Shield"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(INJECT_INFINITY_MAGIC_SHIELD,D8 6B 38 D9 5B 38) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

registersymbol(INJECT_INFINITY_MAGIC_SHIELD)

newmem:

code:
  // fsubr dword ptr [ebx+38]
  fstp dword ptr [ebx+38]
  jmp return

INJECT_INFINITY_MAGIC_SHIELD:
  jmp newmem
  nop
return:

{
// ORIGINAL CODE - INJECTION POINT: 05B5C342

05B5C325: FF 15 78 72 4B 07     -  call dword ptr [074B7278]
05B5C32B: 33 C0                 -  xor eax,eax
05B5C32D: E9 96 0F 00 00        -  jmp 05B5D2C8
05B5C332: D9 43 38              -  fld dword ptr [ebx+38]
05B5C335: D9 EE                 -  fldz
05B5C337: DF F1                 -  fcomip st(0),st(1)
05B5C339: DD D8                 -  fstp st(0)
05B5C33B: 7A 34                 -  jp 05B5C371
05B5C33D: 73 32                 -  jae 05B5C371
05B5C33F: D9 45 08              -  fld dword ptr [ebp+08]
// ---------- INJECTING HERE ----------
05B5C342: D8 6B 38              -  fsubr dword ptr [ebx+38]
05B5C345: D9 5B 38              -  fstp dword ptr [ebx+38]
// ---------- DONE INJECTING  ----------
05B5C348: D9 43 38              -  fld dword ptr [ebx+38]
05B5C34B: D9 EE                 -  fldz
05B5C34D: DF F1                 -  fcomip st(0),st(1)
05B5C34F: DD D8                 -  fstp st(0)
05B5C351: 7A 1E                 -  jp 05B5C371
05B5C353: 72 1C                 -  jb 05B5C371
05B5C355: 80 BB 93 00 00 00 00  -  cmp byte ptr [ebx+00000093],00
05B5C35C: 0F 94 C2              -  sete dl
05B5C35F: 0F B6 D2              -  movzx edx,dl
05B5C362: 8B CB                 -  mov ecx,ebx
}

[DISABLE]

INJECT_INFINITY_MAGIC_SHIELD:
  db D8 6B 38 D9 5B 38

dealloc(newmem)

unregistersymbol(INJECT_INFINITY_MAGIC_SHIELD)

</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>GV</Name>
      <Address>02860000</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>Game                 : Chasm Build 1.074
Process Name         : Chasm.exe
Author               : Jim00000
Last Update          : 01.20.2020
Table Version        : 1.2.0
Chear Engine Version : 7.0
URL                  : https://github.com/Jim00000/Chasm-Cheat-Table
[Cheat Table contents]
- Pointer to HP
- Pointer to MP
- Pointer to Gold
- Pointer to timer (Concentration Card Game)
- Infinite magic shield 
[ChangeLog]
01.20.2020 [version 1.2.0] :
- Add infinite magic shield
01.19.2020 [version 1.1.0] :
- Add pointer to Concentration Timer (Card Game) (Note #1)
01.18.2020 [version 1.0] :
- Initial release
[Note]
- #1 : activate this cheat after playing card game
[MIT License]
Copyright (c) 2020 Jim00000
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
</Comments>
</CheatTable>
